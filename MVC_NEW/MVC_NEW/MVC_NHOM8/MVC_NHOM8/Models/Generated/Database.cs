




















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `NHOM8`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `data source=THUYDUNG;initial catalog=N8;persist security info=True;user id=sa;password=**zapped**;App=EntityFramework`
//     Schema:                 ``
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace NHOM8
{

	public partial class NHOM8DB : Database
	{
		public NHOM8DB() 
			: base("NHOM8")
		{
			CommonConstruct();
		}

		public NHOM8DB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			NHOM8DB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static NHOM8DB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new NHOM8DB();
        }

		[ThreadStatic] static NHOM8DB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static NHOM8DB repo { get { return NHOM8DB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    

	[TableName("dbo.__MigrationHistory")]



	[PrimaryKey("MigrationId", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class __MigrationHistory : NHOM8DB.Record<__MigrationHistory>  
    {



		[Column] public string MigrationId { get; set; }





		[Column] public string ContextKey { get; set; }





		[Column] public byte[] Model { get; set; }





		[Column] public string ProductVersion { get; set; }



	}

    

	[TableName("dbo.ChiTietDonDatHangs")]



	[PrimaryKey("ChiTietDDHID")]




	[ExplicitColumns]

    public partial class ChiTietDonDatHang : NHOM8DB.Record<ChiTietDonDatHang>  
    {



		[Column] public int ChiTietDDHID { get; set; }





		[Column] public int DonDatHangID { get; set; }





		[Column] public int SanPhamID { get; set; }





		[Column] public int SoLuong { get; set; }





		[Column] public string SanPham { get; set; }





		[Column] public float DonGia { get; set; }



	}

    

	[TableName("dbo.DanhMucs")]



	[PrimaryKey("DanhMucID")]




	[ExplicitColumns]

    public partial class DanhMuc : NHOM8DB.Record<DanhMuc>  
    {



		[Column] public int DanhMucID { get; set; }





		[Column] public string TenDanhMuc { get; set; }





		[Column] public string Mota { get; set; }



	}

    

	[TableName("dbo.DonDatHangs")]



	[PrimaryKey("DonDatHangID")]




	[ExplicitColumns]

    public partial class DonDatHang : NHOM8DB.Record<DonDatHang>  
    {



		[Column] public int DonDatHangID { get; set; }





		[Column] public DateTime NgayTao { get; set; }





		[Column] public double ThanhTien { get; set; }





		[Column] public string TinhTrangDonHang { get; set; }





		[Column] public int KhachHangID { get; set; }





		[Column] public string TenKH { get; set; }





		[Column] public string SdtKH { get; set; }





		[Column] public string EmailKH { get; set; }



	}

    

	[TableName("dbo.KhachHangs")]



	[PrimaryKey("KhachHangID")]




	[ExplicitColumns]

    public partial class KhachHang : NHOM8DB.Record<KhachHang>  
    {



		[Column] public int KhachHangID { get; set; }





		[Column] public string TenKH { get; set; }





		[Column] public string DiaChiKH { get; set; }





		[Column] public string SdtKH { get; set; }





		[Column] public string EmailKH { get; set; }



	}

    

	[TableName("dbo.QuyenDangNhaps")]



	[PrimaryKey("QuyenDNID")]




	[ExplicitColumns]

    public partial class QuyenDangNhap : NHOM8DB.Record<QuyenDangNhap>  
    {



		[Column] public int QuyenDNID { get; set; }





		[Column] public string TenQuyenDN { get; set; }



	}

    

	[TableName("dbo.SanPhams")]



	[PrimaryKey("SanPhamID")]




	[ExplicitColumns]

    public partial class SanPham : NHOM8DB.Record<SanPham>  
    {



		[Column] public int SanPhamID { get; set; }





		[Column] public string TenSP { get; set; }





		[Column] public string AnhSP { get; set; }





		[Column] public int SoLuongSP { get; set; }





		[Column] public float GiaSP { get; set; }





		[Column] public string MotaSP { get; set; }





		[Column] public string DVT { get; set; }





		[Column] public int DanhMucID { get; set; }



	}

    

	[TableName("dbo.sysdiagrams")]



	[PrimaryKey("diagram_id")]




	[ExplicitColumns]

    public partial class sysdiagram : NHOM8DB.Record<sysdiagram>  
    {



		[Column] public string name { get; set; }





		[Column] public int principal_id { get; set; }





		[Column] public int diagram_id { get; set; }





		[Column] public int? version { get; set; }





		[Column] public byte[] definition { get; set; }



	}

    

	[TableName("dbo.USERs")]



	[PrimaryKey("UserID")]




	[ExplicitColumns]

    public partial class USER : NHOM8DB.Record<USER>  
    {



		[Column] public int UserID { get; set; }





		[Column] public string TenDangNhap { get; set; }





		[Column] public string MatKhau { get; set; }





		[Column] public string EmailDK { get; set; }





		[Column] public string DiaChiDK { get; set; }





		[Column] public string TenDayDu { get; set; }





		[Column] public string Cauhoibaomat { get; set; }





		[Column] public DateTime NgaySinh { get; set; }





		[Column] public string GioiTinh { get; set; }





		[Column] public int QuyenDNID { get; set; }



	}


}
